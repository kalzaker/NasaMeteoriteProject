// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using NasaMeteoriteService.Data;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace NasaMeteoriteService.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250520150729_UpdateMassToDouble")]
    partial class UpdateMassToDouble
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("NasaMeteoriteService.Models.Meteorite", b =>
                {
                    b.Property<string>("MeteoriteId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("text");

                    b.Property<string>("Fall")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<double?>("GeoLat")
                        .HasColumnType("double precision");

                    b.Property<double?>("GeoLong")
                        .HasColumnType("double precision");

                    b.Property<double?>("Mass")
                        .HasColumnType("double precision");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Nametype")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("NasaId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Recclass")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<float?>("Reclat")
                        .HasColumnType("real");

                    b.Property<float?>("Reclong")
                        .HasColumnType("real");

                    b.Property<DateTime>("Year")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("MeteoriteId");

                    b.HasIndex("NasaId")
                        .IsUnique();

                    b.ToTable("Meteorites");
                });
#pragma warning restore 612, 618
        }
    }
}
